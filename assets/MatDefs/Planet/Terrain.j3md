MaterialDef PlanetTerrain {

        // Parameters to material:
        // regionXColorMap: X = 1..4 the texture that should be appliad to state X
        // regionX: a Vector3f containing the following information:
        //      regionX.x: the start height of the region
        //      regionX.y: the end height of the region
        //      regionX.z: the texture scale for the region
        //  it might not be the most elegant way for storing these 3 values, but it packs the data nicely :)
	MaterialParameters {
		Texture2D Region1ColorMap
		Texture2D Region2ColorMap
		Texture2D Region3ColorMap
		Texture2D Region4ColorMap
		Vector3 Region1
		Vector3 Region2
		Vector3 Region3
		Vector3 Region4

                // Used for height determination
                Vector3 PatchCenter
                Float PlanetRadius

                // Use to turn on the Logarithmic Depth Buffer
                Boolean LogarithmicDepthBuffer
	}

	Technique {
                LightMode MultiPass
		VertexShader GLSL100:   MatDefs/Planet/Terrain.vert
		FragmentShader GLSL100: MatDefs/Planet/Terrain.frag

		WorldParameters {
			WorldViewProjectionMatrix
			WorldMatrix
			NormalMatrix
                        WorldViewMatrix
                        ViewMatrix
                        FrustumNearFar
		}

                Defines {
                    LOGARITHIMIC_DEPTH_BUFFER : LogarithmicDepthBuffer
                }
	}
}